name: iOS

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  format:
    name: Code Style
    runs-on: macos-14
    steps:
    - name: Install tools
      run: brew install swiftlint
      
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Check format
      run: swiftlint lint . --reporter github-actions-logging

  test:
    name: Build and Test
    runs-on: macos-14
    steps:
      - name: Install tools
        run: brew install xcbeautify
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
    
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
      - name: Build
        run: set -o pipefail && xcodebuild build -scheme HudHud -destination 'generic/platform=iOS' -skipPackagePluginValidation -skipMacroValidation | xcbeautify --renderer github-actions

      - name: Test
        run: set -o pipefail && xcodebuild test -scheme HudHud -destination 'platform=iOS Simulator,OS=17.5,name=iPhone 15 Pro' -skipPackagePluginValidation -skipMacroValidation | xcbeautify --renderer github-actions
        